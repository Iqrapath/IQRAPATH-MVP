---
alwaysApply: true
---

type: ops
description: Token, time, and output discipline rules

# Token & Time Discipline Rules

## Output Budgeting
- Hard cap responses to the minimum needed to solve the task.
- Prefer diffs and code patches over prose.
- If a step is ambiguous, ask 1 concise clarifying question, then proceed.

## Verification Before Generation
- Verify file paths exist before referencing them.
- Reuse existing functions/services; do not propose new abstractions unless strictly necessary.
- If a symbol looks similar to an existing one, search first, then reference the actual implementation.

## Diff-First Mindset
- When modifying code, output only the minimal diff needed.
- Do not refactor unrelated code in the same patch.
- Do not reformat entire files unless explicitly requested.

## Non-Goals (Never do these)
- No tutorials, no boilerplate explanations, no restating the problem.
- No speculative architecture. Only reference what exists in this repo.
- No TODOs or placeholder stubs in production code.
- No broad rewrites. Keep edits surgical.

## Decision Tree (Use this every time)
1) Does something similar already exist? Reuse it.
2) Can the change be implemented by extending a Service or Controller that already exists? Do that.
3) Does the change require data model updates? Update existing migration/models instead of creating parallel structures.
4) Keep scope to exactly what the user asked.

## When to Ask Questions
- Only when a critical decision cannot be inferred from codebase conventions.
- Ask exactly one question, list the 1-2 viable defaults you can proceed with otherwise.

## References
- Services: app/Services/*.php (NotificationService, FinancialService, SubscriptionService, ZoomService, etc.)
- Routes: routes/*.php
- Frontend: resources/js/pages, resources/js/components, resources/js/layouts
- Tests: tests/**/* (Pest)

